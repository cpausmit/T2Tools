#!/usr/bin/env python
#---------------------------------------------------------------------------------------------------
# Script to list a directory. The format is the filesize in the first column and the full filename
# in the second column.
#
# Author: C.Paus                                                                 (February 11, 2010)
#---------------------------------------------------------------------------------------------------
import os,sys,getopt,re

server = os.environ['T2TOOLS_SERVER']
t2user = os.environ['T2TOOLS_USER']

def clean(file):
    # make the file name standard

    if   file.startswith('root:'):
        g = file.split('/')
        file = '/'.join(g[3:])
        file = '/cms' + file
    elif file.startswith('/mnt/hadoop/cms/store'):
        file = '/' + '/'.join(dir.split('/')[3:])

    #debugPrint(' clean: ' + file)

    return file

def list(dir,pattern,long,debug):
    # list a directory

    if not dir.startswith('/cms'):
        print ' ERROR -- directory not on Tier-2: ' + dir

    if debug != 0:
        print ' identified a tier-2 hadoop directory (long=%d)'%(long)

    cmd = 'ssh -x ' + t2user + '@' + server + ' hdfs dfs -ls ' + dir
    if   long == 0:
        cmd += ' | tr -s \' \' | cut -d\' \' -f5,8 | sed \'s#/.*/##\' | grep ^[0-9] '
    elif long == 1:
        cmd += ' | tr -s \' \' | cut -d\' \' -f5,8 | grep ^[0-9] '
            
    if pattern != "":
        cmd += ' | grep ' + pattern

    if debug != 0:
        print '  -> listing with: ' + cmd

    status = os.system(cmd)
    
    return status

#===================================================================================================
# Main starts here
#===================================================================================================
# Define string to explain usage of the script
usage =  "Usage: list --pattern=<name>\n"
usage += "            --debug\n"
usage += "            --long\n"
usage += "            --help\n"

# Define the valid options which can be specified and check out the command line
valid = ['pattern=','long=','debug=','help']
try:
    opts, args = getopt.getopt(sys.argv[1:], "", valid)
except getopt.GetoptError, ex:
    print usage
    print str(ex)
    sys.exit(1)

# --------------------------------------------------------------------------------------------------
# Get all parameters for the production
# --------------------------------------------------------------------------------------------------
# Set defaults for each option
pattern = ''
debug = 0
long = 0
# Read new values from the command line
for opt, arg in opts:
    if opt == '--help':
        print usage
        sys.exit(0)
    if opt == '--pattern':
        pattern = arg
    if opt == '--long':
        long = int(arg)
    if opt == '--debug':
        debug = arg

# Test whether the directory exists and then proceed
status = 0
for dir in sys.argv[1:]:

    dir = clean(dir)

    if dir[:2] == "--":
        continue

    if debug != 0:
        print "\nProcessing: " + dir + "\n"

    status += list(dir,pattern,long,debug)

# make sure to give the right exit code
if status != 0:
    status = 1

sys.exit(status)
